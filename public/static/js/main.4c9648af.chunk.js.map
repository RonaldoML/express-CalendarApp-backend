{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","event","start","moment","toDate","end","eventAddNew","type","payload","eventSetInactive","eventUpdated","eventDeleted","eventLoader","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","showRegister","setShowRegister","handleShowRegister","e","preventDefault","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","onClick","NavBar","useSelector","state","auth","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","closeTimeoutMS","style","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lasView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c9648af.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4000/api/\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4000/api/\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        } );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\n\r\n//1. Crear tipos para los reducers\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventLogout: '[event] Logout event',\r\n    eventSetActive: '[event] Set Active',\r\n    eventSetInactive: '[event] Set Inactive',\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] Start Add new',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoader: '[event] Event loading',\r\n\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n\r\n    return events.map( event =>({\r\n        ...event,\r\n        start: moment(event.start).toDate(),\r\n        end: moment(event.end).toDate()\r\n    })  );\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        //dispatch()\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetInactive = () => ({\r\n    type: types.eventSetInactive\r\n})\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT' );\r\n\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire( 'Error', body.msg ,'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n})\r\n\r\nexport const startEventDeleted = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE' );\r\n\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire( 'Error', body.msg ,'error' );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            if (body.ok) {\r\n                dispatch(eventLoader(events));\r\n            }\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoader = (events) => ({\r\n    type: types.eventLoader,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( {\r\n                uid: body.uid,\r\n                name: body.name\r\n            } ) )\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( {\r\n                uid: body.uid,\r\n                name: body.name\r\n            } ) )\r\n\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( {\r\n                uid: body.uid,\r\n                name: body.name\r\n            } ) )\r\n\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        \r\n        localStorage.clear();\r\n\r\n        dispatch( logout() );\r\n        dispatch( eventLogout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [showRegister, setShowRegister] = useState(false);\r\n\r\n    const handleShowRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        setShowRegister(!showRegister);\r\n\r\n\r\n    }\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'f@gmail.com',\r\n        lPassword: '12345647'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Fernando',\r\n        rEmail: 'f@gmail.com',\r\n        rPassword: '1234567',\r\n        rPassword2: '1234567'\r\n    });\r\n\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n        \r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                {\r\n                    (!showRegister) &&\r\n                    <div className=\"col-md-6 login-form-1\">\r\n                        <h3>Ingreso</h3>\r\n                        <form onSubmit={ handleLogin }>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name='lEmail'\r\n                                    value={lEmail}\r\n                                    onChange={ handleLoginInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name='lPassword'\r\n                                    value={lPassword}\r\n                                    onChange={ handleLoginInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Login\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <button className=\"btn-down\" onClick={handleShowRegister}>Registrar...</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    (showRegister) &&\r\n                    <div className=\"col-md-6 login-form-2\">\r\n                        <h3>Registro</h3>\r\n                        <form onSubmit={ handleRegister }>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    name=\"rName\"\r\n                                    value={ rName }\r\n                                    onChange={ handleRegisterInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"rEmail\"\r\n                                    value={rEmail}\r\n                                    onChange={ handleRegisterInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"rPassword\"\r\n                                    value={rPassword}\r\n                                    onChange={ handleRegisterInputChange }\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Repita la contraseña\"\r\n                                    name=\"rPassword2\"\r\n                                    value={rPassword2}\r\n                                    onChange={ handleRegisterInputChange }\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group mb-2\">\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Crear cuenta\" />\r\n                            </div>\r\n                            <div className=\"form-group mb-2\">\r\n                                <button className=\"btn-down\" onClick={handleShowRegister}>Ya tienes una cuenta?...</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"> </i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    \r\n    const { title, user } = event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Modal from 'react-modal';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventSetInactive, eventStartAddNew, eventStartUpdated } from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); //3:45:50\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n        return () => {\r\n\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n\r\n        });\r\n\r\n    }\r\n\r\n    //const [isOpen, setIsOpen] = useState(true)\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n\r\n        //TODO: cerrar el modal\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventSetInactive());\r\n\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n        //TODO: realizar la grabación en DB\r\n        if (activeEvent) {\r\n\r\n            dispatch(eventStartUpdated(formValues));\r\n\r\n        } else {\r\n\r\n            console.log({...formValues})\r\n            dispatch(eventStartAddNew( formValues ) );\r\n\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            //onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            closeTimeoutMS={200}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> {activeEvent ? 'Editar Evento' : 'Crear Evento'}</h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={handleEndDateChange}\r\n                        minDate={dateStart}\r\n                        value={dateEnd}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n\r\n                {/* <div className=\"d-grid gap-2\"> */}\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary w-100\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n                {/* </div> */}\r\n\r\n            </form>\r\n\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickView = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickView }\r\n        >\r\n            <i\r\n                className=\"fas fa-plus\"\r\n            ></i>\r\n        </button>\r\n    )\r\n}\r\n","\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startEventDeleted } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startEventDeleted() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span>Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventSetInactive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\r\n\r\n// const events = [{\r\n//     title: 'Cumpleaños',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Ron'\r\n//     }\r\n// }]\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { uid } = useSelector(state => state.auth)\r\n\r\n    //TODO: leer los eventos desde el store\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [lasView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        // if (activeEvent) {\r\n        //     dispatch( eventSetInactive() );\r\n        // } else {\r\n            \r\n            dispatch( eventSetActive(e) );\r\n        //}\r\n        // dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n\r\n        dispatch( eventSetInactive() );\r\n\r\n        //dispatch( uiOpenModal());\r\n\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#323232',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={true}\r\n                view={lasView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n            <CalendarModal/>\r\n\r\n            <AddNewFab/>\r\n\r\n            {\r\n                activeEvent &&\r\n                <DeleteEventFab/>\r\n            }\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n\r\n            {...rest}\r\n            component={(props) => (\r\n\r\n                (isAuthenticated)\r\n                    ? <Component {...props} />\r\n                    : <Redirect to='/login' />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n    return (\r\n        <Route\r\n\r\n            {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? <Redirect to='/' />\r\n                    : <Component {...props} />\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n\r\n    }, [dispatch]);\r\n\r\n    if (checking) {\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact isAuthenticated={ !!uid } path='/login' component={LoginScreen} />\r\n                    <PrivateRoute exact isAuthenticated={ !!uid } path='/' component={CalendarScreen} />\r\n\r\n                    <Redirect to='/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","\r\nimport { types } from \"../types/types\";\r\n\r\n/*\r\n        {\r\n            id: new Date().getTime(),\r\n            title: 'Cumpleaños',\r\n            start: moment().toDate(),\r\n            end: moment().add(2, 'hours').toDate(),\r\n            notes: 'Comprar el pastel',\r\n            user: {\r\n                _id: '123',\r\n                name: 'Ron'\r\n            }\r\n        }\r\n*/\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventSetInactive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n        case types.eventAddNew:\r\n            // state.events.unshift(action.payload);\r\n            return{\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map( e => (e.id === action.payload.id) ? action.payload : e)\r\n            }\r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter( e => e.id !== state.activeEvent.id),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoader:\r\n            return{\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\n//2. Crear los casos del reducer dependiendo del type recibido\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\n//3. Reducer que une todos los reducers para hacer el provide del context\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import thunk from 'redux-thunk';\r\nimport {applyMiddleware, compose, createStore} from 'redux';\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\n//4. Crear el store importando el rootReducer\r\n//permite hacer peticiones asíncronas en redux\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\n\r\n//5. Proveer el store\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store}>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}